
ВВЕДЕНИЕ
Анализ проблем и их актуальности (будет добавлено позже)
 
ГЛАВА 1. АНАЛИЗ ПРЕДМЕТНОЙ ОБЛАСТИ
Для успешного решения задачи построения универсальной системы онлайн очереди, в первую очередь, необходимо провести анализ существующих методов организации очередей и анализа алгоритмов ранжирования пользователей с целью выявления наиболее подходящей технологии. Разработка универсального алгоритма для составления очереди является комплексной задачей, которую в общем случае можно представить в виде следующей последовательности этапов: анализ требований и возможностей, проектирование системы, разработка алгоритмов, тестирование и оптимизация. В данной главе определены общие положения и проблемы существующих систем, представлены основные существующие способы решения на каждой из упомянутых стадий, а также принято решение о выборе наиболее подходящего из методов.
1.1.	Анализ и сравнение существующих систем онлайн очередей
Проведем анализ ряда систем управления очередями, существующих на момент 2023 года, и рассмотрим их особенности и подходы к организации онлайн очередей.
1.1.1.	Анализ функционала системы онлайн очереди МАКСИМ
Для российского рынка достаточно давно представлено решение в виде онлайн очереди МАКСИМ от компании «МТГ. Бизнес-решения», которая уже используется во многих государственных учреждениях, например, таких как, ФНС, МФЦ, во многих банках и т.д.
Эта система принесла несколько преимуществ, сделав бизнес-процессы обслуживания более эффективными и автоматизированными. Она охватывает все этапы обслуживания посетителей и обеспечивает сбор и обработку статистической информации. Благодаря этому система обеспечивает полный контроль и мониторинг работы отделений в режиме реального времени, а также гарантирует надежное и компактное хранение статистических данных. Она также обладает масштабируемостью и гибкостью.  
Одним из основных преимуществ данной системы является возможность обслуживания посетителей без ожидания в очереди. В реальной жизни часто возникают ситуации, когда необходимо сделать исключение из автоматического процесса обслуживания, например, при посещении приоритетных посетителей, таких как мамы с детьми, инвалиды или ветераны Великой Отечественной войны.  
Система электронной очереди МАКСИМА использует два вида приоритетов вызова посетителей: абсолютный и динамический. При абсолютном приоритете посетитель с признаком приоритета помещается в начало очереди и вызывается следующим. При динамическом приоритете каждому посетителю при регистрации в очереди присваивается рейтинг, определяющий его место в очереди ожидания обслуживания.  
Абсолютный приоритет используется для обслуживания клиентов, которым предоставляются привилегии или льготы по сравнению с остальными. Например, в банках это могут быть держатели карт Gold, а в поликлиниках – инвалиды, ветераны или пенсионеры. Посетитель с таким приоритетом вызывается к первому свободному оператору без ожидания в очереди. Однако, при большом количестве приоритетных клиентов время ожидания для обычных посетителей увеличивается, и некоторые из них могут даже уйти, не получив обслуживания.  
Когда возникают нештатные ситуации, система переходит на "ручное управление", информируя персонал о проблемах, связанных с длительным ожиданием определенных услуг и необходимостью ускорения процесса. Однако, если операторы находятся в одном зале с очередью, такая информация может вызвать только недовольство, не решая проблему.  
Для очередей, в которых присутствуют дети, настройка системы в режиме реального времени может быть неудобной, особенно без специалиста, знакомого с работой системы электронной очереди и ее настройкой. Поэтому в данной системе используется механизм динамических приоритетов или рейтингов. При регистрации посетителя в очереди ему присваивается определенный рейтинг, и система сравнивает его с рейтингом первого посетителя в очереди. Если рейтинги равны или рейтинг нового посетителя меньше, то новичок ставится в очередь после того, кто пришел раньше. Если же начальный рейтинг нового посетителя выше, то система помещает его в начало очереди, одновременно уменьшая его рейтинг на единицу и увеличивая рейтинг более раннего посетителя на эту же единицу.  
Такая система распределения посетителей в очереди обеспечивает справедливое обслуживание: чем больше человек пропускает впереди себя, тем выше его текущий рейтинг. Это означает, что после пропуска одного или двух посетителей он больше никого не пропустит, независимо от рейтинга нового посетителя, и будет обслужен раньше него.
1.1.2.	Анализ функционала системы управления очередями Qminder
Qminder - система управления очередями для организаций с большим потоком посетителей. Она интегрирована с устройствами Apple, предоставляя приложения для регистрации на iPad и ожидания на Apple TV. Однако в российских государственных учреждениях не используется Apple TV для отображения очереди, и не каждый имеет доступ к iPad для постановки в очередь.
Несмотря на ограничения, Qminder предлагает следующие особенности:
1.	Планирование встреч позволяет посетителям проверить пиковые часы и ожидаемое время входа в очередь.
2.	Управление очередью включает функции возврата в очередь, перенаправления в другую линию, повторного вызова и группового обслуживания.
3.	Сервисная аналитика позволяет определить пиковые часы, время ожидания, среднее число посещений в день, продолжительность обслуживания и историю посещений.
Функция "возврат в очередь" позволяет обработать ситуации, когда посетитель не откликается на вызов или не может быть обслужен. Вот несколько примеров:
1.	Посетитель не реагирует. Например, посетитель записался на услугу и ожидает очереди, но по какой-то причине не откликается на вызов (отошел на несколько минут или не услышал свое имя). Сотрудник может вернуть его в очередь и перейти к следующему. Посетитель остается в очереди и будет вызван снова.
2.	Невозможность обслужить посетителя. Например, нужен конкретный сотрудник или ресурс, но он временно недоступен. Посетитель может быть возвращен в очередь до доступности необходимого ресурса.
Эта функция обеспечивает эффективное управление очередью и лучшее обслуживание клиентов, предотвращая пропуск клиентов или ненужное ожидание.
1.2.	Анализ алгоритмов ранжирования
Выбор алгоритма ранжирования имеет важное значение для эффективной системы управления очередями. В этом разделе мы рассмотрим особенности и способность различных алгоритмов ранжирования к сокращению времени ожидания в очередях. 
Ранжирование в управлении очередями определяет порядок обслуживания клиентов. В системах управления очередями применяются несколько основных алгоритмов:   
1.	Приоритетное упорядочивание (Priority Queuing): клиенты ранжируются на основе их приоритета, который может зависеть от различных факторов, таких как время ожидания, статус клиента или тип услуги.      
2.	Взвешенная справедливая очередь (Weighted Fair Queuing, WFQ): этот алгоритм предполагает, что клиенты с большим весом получают больше ресурсов. Вес может определяться на основе важности клиента или сложности задачи.
Однако выбор универсального алгоритма для онлайн-очередей представляет сложность, так как учет большого количества факторов, влияющих на ранжирование пользователей, не всегда возможен для человека или приведенных примеров. В этом случае хорошо обученная нейронная сеть может быть полезным решением.  
Среди популярных современных алгоритмов ранжирования можно выделить PiRank, VNS-Rank, SetRank и Mulberry. Эти подходы являются передовыми в области исследований и анализа алгоритмов ранжирования и применяются для достижения наилучших результатов. 
1.2.1.	Описание sota-ranking алгоритмов
Состояние техники (SOTA) - это лучшие модели в области искусственного интеллекта (ИИ), которые достигают впечатляющих результатов в специфических задачах ИИ. Основные преимущества моделей SOTA следующие.
Во-первых, модели SOTA обеспечивают повышенную точность выполнения задачи. Оцениваются различные параметры, такие как recall, precision и площадь под кривой, и определяется значение SOTA для каждой выбранной метрики. Когда эти метрики демонстрируют высокую точность (около 90%-95%), модели считаются SOTA. Это обеспечивает точные результаты, которые наилучшим образом соответствуют потребностям пользователей.  
Во-вторых, модели SOTA повышают надежность выполнения задач. Высокая точность моделей SOTA гарантирует соответствие результатов ожиданиям. Независимо от типа задачи (машинное обучение или глубокая нейронная сеть), результаты надежны и не случайны.
В-третьих, модели SOTA обеспечивают воспроизводимость. Создание гибкого и экономически эффективного продукта ИИ включает быстрое развертывание минимально жизнеспособного продукта для клиентского тестирования. Это позволяет получить обратную связь пользователей и внести итеративные улучшения. Воспроизводимость в моделях SOTA является хорошей практикой, которая помогает находить алгоритмические компромиссы.  
В-четвертых, модели SOTA сокращают время генерации. Благодаря возможности воспроизведения алгоритмов или продуктов, они ускоряют процесс разработки. Прототип может быть преобразован в готовый продукт за более короткий срок. Время генерации сокращается благодаря возможности повторного использования алгоритма с заранее заданными параметрами.
Одной из основных проблем, связанных с подходами машинного обучения для ранжирования, является разрыв между интересующими показателями эффективности и суррогатными функциями потерь, которые можно оптимизировать с помощью градиентных методов. Это связано с операцией сортировки в показателях ранжирования, которая не может быть дифференцирована по параметрам модели.  
При ранжировании предпочтение между элементами определяется с помощью меток релевантности. Одной из сложностей в Learning to Rank (LTR) заключается в зависимости нижестоящих показателей, таких как Normalized Discounted Cumulative Gain (NDCG) и Average Relevance Position (ARP), от создаваемых моделью рангов. Эти ранги недифференцируемы относительно параметров модели, что делает невозможной их оптимизацию с помощью градиентных методов.  
Для решения этой проблемы используются методы, которые связывают элементы с вещественными оценками и определяют суррогатные функции потерь, работающие с этими оценками. Такие суррогатные функции могут быть классифицированы по типу. Модели LTR, оптимизированные с использованием точечных суррогатов, решают задачу ранжирования как задачу регрессии/классификации, где метки элементов соответствуют их индивидуальным меткам релевантности. Такие подходы не учитывают взаимосвязи между ранжированием.  
Кроме того, существуют два основных подхода к методам ранжирования: списочный и попарный.  
Списочный подход оценивает ранжирование в целом. Однако он не всегда учитывает взаимосвязи из-за предварительной сортировки всего списка.  
Попарный подход предполагает определение предпочтений между объектами. Модель принимает на вход два объекта и предсказывает вероятность того, что первый объект предпочтительнее второго для пользователя. Попарные методы не всегда гарантируют выполнение математических свойств, таких как ассоциативность или транзитивность.
Однако, как показано на рисунке 1, если существуют пары предпочтений элемента “A>B” и “C>D” для пользователя 1, пары “A>D” и “C>B” также должны существовать для пользователя 1 из-за двоичного значения неявной обратной связи. Другими словами, мы имеем p (A> D, C> B | A> B, C> D) = 1 в практическом процессе построения пары, что нарушает независимость между парами и, таким образом, влияет на результат оптимизации потери по парам. 
 
Рис.1.1. Схематический набросок структур предпочтений в различных подходах к совместному ранжированию, где ”>” представляет порядок предпочтений
Рассмотрев преимущества и недостатки, виды подходов, теперь рассмотрим, что лежит в основе конкретных алгоритмов.
1.2.1.1.	PiRank алгоритм
PiRank - это новый алгоритм обучения ранжированию, который масштабируется и использует дифференцируемую сортировку. Он представляет класс дифференцируемых суррогатов для ранжирования и базируется на непрерывной релаксации оператора сортировки, основанного на методе NeuralSort.  
Алгоритм PiRank применяет списочный подход, используя глубокие нейронные сети для ранжирования и дифференцируемую релаксацию оператора сортировки для вычисления суррогатных потерь. Основная цель PiRank - точная оптимизация метрик ранжирования при нулевой температуре для уменьшения дисперсии оценки градиента. Алгоритм также масштабируется для работы с огромными списками товаров в реальных промышленных сценариях.
1.2.1.2.	VNS алгоритм
Variable Neighbourhood Search (VNS) - это подход, использующий списочный метод, который представляет две новые методологии для обучения ранжированию в искусственном интеллекте.  
VNS используется для оптимизации решений эвристических задач путем систематического изменения соседних решений. Цель состоит в выборе наилучшего потомства для достижения локального и глобального оптимумов.  
Алгоритм Variable Neighborhood Search преодолевает проблему застревания в локальных оптимумах, которая часто возникает при использовании алгоритмов локального поиска. Он осуществляет тщательное исследование различных соседних решений с разными размерами шагов мутации.
1.2.1.3.	SetRank алгоритм

SetRank - это списочный подход, который использует многомерную функцию ранжирования с перестановкой. Он учитывает неявную обратную связь в рекомендательных системах и стремится максимизировать апостериорную вероятность новых сравнений предпочтений по всему набору данных.
1.2.1.4.	Mulberry алгоритм
Mulberry - это гибридный подход, объединяющий списочные и парные методы. Он исследует политики ранжирования, максимизирующие несколько метрик по всему набору данных.
1.3.	Анализ требований к универсальной системе онлайн очереди
Определение ключевых требований к системе     
Анализ возможностей для индивидуализации очередей     
Оценка необходимых ресурсов для реализации системы  
1.4.	Выводы
Итоги анализа предметной области     
Подведение итогов выбора подхода и технологий     
ГЛАВА 2. ТЕОРЕТИЧЕСКАЯ ЧАСТЬ
2.1	 Анализ требований к универсальной системе онлайн очереди
 
